# Application and Server config
spring.application.name=turtrack-manager
server.port=9999

# Vehicle Database Configuration
spring.datasource.turtrack.url=jdbc:postgresql://localhost:5432/turo
spring.datasource.turtrack.username=turo_user
spring.datasource.turtrack.password=turo_password
spring.datasource.turtrack.driver-class-name=org.postgresql.Driver

# Job Database Configuration
spring.datasource.manager.url=jdbc:postgresql://localhost:5433/turtrack_manager_db
spring.datasource.manager.username=turtrack_user
spring.datasource.manager.password=turtrack_password
spring.datasource.manager.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=OFF
logging.file.name=logs/application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=10
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Spring Batch Configuration
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always

# RabbitMQ Configuration
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

# RabbitMQ Queue Names
#rabbitmq.queue.vehicle-details=queue.vehicle.details
#rabbitmq.queue.dr-availability=queue.dr.availability
#rabbitmq.queue.cells=queue.cells

# RabbitMQ Exchange
rabbitmq.exchange=turtrack.exchange
#spring.rabbitmq.listener.simple.acknowledge-mode=manual

# RabbitMQ Routing Keys
rabbitmq.routing-key.vehicle-details=turtrack.vehicle.details
rabbitmq.routing-key.dr-availability=turtrack.dr.availability
rabbitmq.routing-key.cells=turtrack.cells

spring.session.store-type=none


# JWT
app.jwt.secret=your-very-long-and-secure-jwt-secret-key-here-minimum-256-bits
app.jwt.expiration-milliseconds=604800000

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=395493307287-d11b2e995db7sr6lg0f3p7b0dr66dl8a.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9999/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# If you want to configure additional OAuth2 properties
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub