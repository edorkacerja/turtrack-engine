@tailwind base;
@tailwind components;
@tailwind utilities;

// Design Tokens
$tokens: (
        spacing: (
                xs: 0.25rem,
                sm: 0.5rem,
                md: 1rem,
                lg: 1.5rem,
                xl: 2rem
        ),
        colors: (
                primary: (
                        base: #646cff,
                        hover: #535bf2,
                        light: #747bff
                ),
                text: (
                        dark: rgba(255, 255, 255, 0.87),
                        light: #213547
                ),
                background: (
                        dark: #242424,
                        light: #ffffff,
                        button: (
                                dark: #1a1a1a,
                                light: #f9f9f9
                        )
                )
        ),
        typography: (
                fonts: (
                        primary: (Inter, system-ui, Avenir, Helvetica, Arial, sans-serif)
                ),
                weights: (
                        normal: 400,
                        medium: 500,
                        bold: 700
                ),
                sizes: (
                        base: 1rem,
                        lg: 1.25rem,
                        xl: 1.5rem,
                        h1: 3.2em
                ),
                line-heights: (
                        tight: 1.1,
                        normal: 1.5,
                        relaxed: 1.75
                )
        )
);

// Simplified token access function
@function t($key...) {
  $map: $tokens;
  @each $key in $key {
    $map: map-get($map, $key);
  }
  @return $map;
}

// Mixins
@mixin focus-ring {
  &:focus-visible {
    outline: 4px auto -webkit-focus-ring-color;
    outline-offset: 2px;
  }
}

@mixin hover-transition {
  transition: all 0.2s ease-in-out;
}

// Base styles
:root {
  font-family: t(typography, fonts, primary);
  line-height: t(typography, line-heights, normal);
  font-weight: t(typography, weights, normal);

  color-scheme: light dark;
  color: t(colors, text, dark);
  background-color: t(colors, background, dark);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Reset & Global styles
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  display: flex;
  min-height: 100vh;
  min-width: 320px;
  place-items: center;
}

// Typography
h1, h2, h3, h4, h5, h6 {
  line-height: t(typography, line-heights, tight);
  font-weight: t(typography, weights, bold);
  margin-bottom: map-get(map-get($tokens, spacing), lg);
}

h1 {
  font-size: t(typography, sizes, h1);
}

// Links
a {
  font-weight: t(typography, weights, medium);
  color: t(colors, primary, base);
  text-decoration: none;
  @include hover-transition;

  &:hover {
    color: t(colors, primary, hover);
    text-decoration: underline;
  }
}

// Buttons
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: map-get(map-get($tokens, spacing), md) map-get(map-get($tokens, spacing), lg);
  font-size: t(typography, sizes, base);
  font-weight: t(typography, weights, medium);
  font-family: inherit;
  background-color: t(colors, background, button, dark);
  cursor: pointer;
  @include hover-transition;

  &:hover {
    border-color: t(colors, primary, base);
    background-color: lighten(t(colors, background, button, dark), 5%);
  }

  &:active {
    transform: translateY(1px);
  }

  @include focus-ring;
}

// Container utils
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 map-get(map-get($tokens, spacing), md);
}

// Media queries
@media (prefers-color-scheme: light) {
  :root {
    color: t(colors, text, light);
    background-color: t(colors, background, light);
  }

  a:hover {
    color: t(colors, primary, light);
  }

  button {
    background-color: t(colors, background, button, light);

    &:hover {
      background-color: darken(t(colors, background, button, light), 5%);
    }
  }
}

// Dark mode override class
.dark {
  color: t(colors, text, dark);
  background-color: t(colors, background, dark);
}