---
apiVersion: v1
kind: Namespace
metadata:
  name: turtrack-engine

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-scraper
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details-scraper
  template:
    metadata:
      labels:
        app: details-scraper
    spec:
      containers:
        - name: details-scraper
          image: details-scraper:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5051
            - containerPort: 9259
          env:
            - name: SCRAPER_TYPE
              value: "vehicle-details"
            - name: KAFKA_BROKERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
          volumeMounts:
            - name: turo-scraper-data
              mountPath: /usr/src/app/database
      volumes:
        - name: turo-scraper-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: details-scraper
  namespace: turtrack-engine
spec:
  selector:
    app: details-scraper
  ports:
    - name: app
      port: 5051
      targetPort: 5051
    - name: debug
      port: 9259
      targetPort: 9259

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pricing-scraper
  namespace: turtrack-engine
spec:
  replicas: 20
  selector:
    matchLabels:
      app: pricing-scraper
  template:
    metadata:
      labels:
        app: pricing-scraper
    spec:
      containers:
        - name: pricing-scraper
          image: pricing-scraper:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5011
            - containerPort: 9229
          env:
            - name: SCRAPER_TYPE
              value: "pricing"
            - name: KAFKA_BROKERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1536"
          volumeMounts:
            - name: turo-scraper-data
              mountPath: /usr/src/app/database
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: "1"
              memory: 2Gi
      volumes:
        - name: turo-scraper-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: pricing-scraper
  namespace: turtrack-engine
spec:
  selector:
    app: pricing-scraper
  ports:
    - name: app
      port: 5011
      targetPort: 5011
    - name: debug
      port: 9229
      targetPort: 9229

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-scraper
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search-scraper
  template:
    metadata:
      labels:
        app: search-scraper
    spec:
      containers:
        - name: search-scraper
          image: search-scraper:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5003
          env:
            - name: SCRAPER_TYPE
              value: "search"
            - name: KAFKA_BROKERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: PORT
              value: "5003"
          volumeMounts:
            - name: turo-scraper-data
              mountPath: /usr/src/app/database
      volumes:
        - name: turo-scraper-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: search-scraper
  namespace: turtrack-engine
spec:
  selector:
    app: search-scraper
  ports:
    - port: 5003
      targetPort: 5003

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calibrator
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calibrator
  template:
    metadata:
      labels:
        app: calibrator
    spec:
      containers:
        - name: calibrator
          image: calibrator:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: turo-scraper-data
              mountPath: /usr/src/app/database
      volumes:
        - name: turo-scraper-data
          emptyDir: {}


---
apiVersion: v1
kind: Service
metadata:
  name: calibrator
  namespace: turtrack-engine
spec:
  selector:
    app: calibrator
  ports:
    - port: 5000
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plotter
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plotter
  template:
    metadata:
      labels:
        app: plotter
    spec:
      containers:
        - name: plotter
          image: plotter:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5002
          volumeMounts:
            - name: turo-scraper-data
              mountPath: /usr/src/app/public/database
      volumes:
        - name: turo-scraper-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: plotter
  namespace: turtrack-engine
spec:
  selector:
    app: plotter
  ports:
    - port: 5002
      targetPort: 5002

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-processor-service
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-processor-service
  template:
    metadata:
      labels:
        app: data-processor-service
    spec:
      containers:
        - name: data-processor-service
          image: data-processor-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8085
          env:
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/turo"
            - name: SPRING_DATASOURCE_USERNAME
              value: "turo_user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "turo_password"

---
apiVersion: v1
kind: Service
metadata:
  name: data-processor-service
  namespace: turtrack-engine
spec:
  selector:
    app: data-processor-service
  ports:
    - port: 8085
      targetPort: 8085

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-persistor-service
  namespace: turtrack-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-persistor-service
  template:
    metadata:
      labels:
        app: data-persistor-service
    spec:
      containers:
        - name: data-persistor-service
          image: data-persistor-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8088
          env:
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.kafka-ecosystem.svc.cluster.local:29092"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://host.docker.internal:5432/turo"
            - name: SPRING_DATASOURCE_USERNAME
              value: "turo_user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "turo_password"

---
apiVersion: v1
kind: Service
metadata:
  name: data-persistor-service
  namespace: turtrack-engine
spec:
  selector:
    app: data-persistor-service
  ports:
    - port: 8088
      targetPort: 8088