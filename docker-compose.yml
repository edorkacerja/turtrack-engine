# No version specified as it's no longer needed in recent Docker Compose versions

services:
  # Turo-scraper services
  calibrator:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: calibrator

  scraper-1:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: scraper-1
    volumes:
      - shared-data:/usr/src/app/database
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  scraper-4:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: scraper-4
    volumes:
      - shared-data:/usr/src/app/database
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  scraper-5:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: scraper-5
    volumes:
      - shared-data:/usr/src/app/database
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  scraper-6:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: scraper-6
    volumes:
      - shared-data:/usr/src/app/database
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092


  plotter:
    extends:
      file: ./turo-scraper/docker-compose.yml
      service: plotter
    volumes:
      - shared-data:/usr/src/app/public/database/

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 536870912
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - /bin/sh
      - -c
      - |
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic vehicle-details-topic
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic dr-availability-topic
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic vehicle-skeleton-topic
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic processed-dr-availability-topic
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic processed-vehicle-details-topic
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 10 --replication-factor 1 --topic processed-vehicle-skeleton-topic
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  # Kafka UI
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: default
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092,localhost:29092,localhost:9092,kafka:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
      - zookeeper
#    volumes:
#      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml


  # Data Processor Service
  data-processor-service:
    build:
      context: ./turtrack-file-processing/data-processor-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/turo
      SPRING_DATASOURCE_USERNAME: turo_user
      SPRING_DATASOURCE_PASSWORD: turo_password

  # Data Persistor Service
  data-persistor-service:
    build:
      context: ./turtrack-file-processing/data-persistor-service
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/turo
      SPRING_DATASOURCE_USERNAME: turo_user
      SPRING_DATASOURCE_PASSWORD: turo_password



volumes:
  shared-data:
  kafka-data:

